if (!bog)var bog = {};
if (bog.api = {uri: {base: {dash: "/dash", pub: "/"}, mod: {nav: "/mod/nav/"}, search: {}, profile: "/profile/", donations: "/donations/", donation: "/donation/", events: "/events/", event: "/event/", event_types: "/event_types/", event_type: "/event_type/", event_statuses: "/event/statuses/", solicitations: "/solicitations/", solicitation: "/solicitation/"}}, !bog)var bog = {};
if (bog.cache = function () {
    var a = function () {
        var a = "test";
        try {
            return localStorage.setItem(a, a), localStorage.removeItem(a), !0
        } catch (b) {
            return!1
        }
    }, b = function (b, c) {
        if (a) {
            var d = JSON.parse(localStorage.getItem(b));
            c(d)
        } else c(null)
    }, c = function (b, c) {
        a && localStorage.setItem(b, JSON.stringify(c))
    }, d = function (b, c) {
        if (a) {
            var d = localStorage.getItem(b);
            if (!c)return d;
            c(d)
        } else {
            if (!c)return null;
            c(null)
        }
    }, e = function (b, c) {
        return a ? void localStorage.setItem(b, c) : null
    };
    return{get_json: b, set_json: c, get_text: d, set_text: e}
}, window.mod_list = [
    []
], window.culture = null, !bog)var bog = {};
if (bog.i18n = function () {
    var a = function (a, b, c) {
        var d = new bog.cache, e = a.replace("-", "_") + "." + b;
        d.get_json(e, function (a) {
            a ? c(a) : $.getJSON("/api/i18n/text/" + e,function (a) {
                d.set_json(e, a), c(a)
            }).fail(function () {
                if (5 === e.split(".").length) {
                    var a = e.split(".");
                    a.pop(), e = a.join("."), d.get_json(e, function (a) {
                        a ? c(a) : $.getJSON("/api/i18n/text/" + e,function (a) {
                            d.set_json(e, a), c(a)
                        }).fail(function () {
                            c(null)
                        })
                    })
                } else c(null)
            })
        })
    }, b = function (a) {
        if (window.culture) {
            if (!a)return window.culture;
            a(window.culture)
        } else {
            var b = new bog.cache;
            b.get_text("current_culture", function (c) {
                if (c) {
                    if (!a)return c;
                    a(c)
                } else $.get("/api/culture",function (c) {
                    return b.set_text("current_culture", c), a ? void a(c) : c
                }).fail(function () {
                    if (window.culture) {
                        if (!a)return window.culture;
                        a(window.culture)
                    } else {
                        if (!a)return"en-US";
                        a("en-US")
                    }
                })
            })
        }
    }, c = function (a) {
        b(function (b) {
            a !== b ? require(["postal"], function (b) {
                for (var c = b.channel("i18n"), d = 0; d < window.mod_list.length; d++) {
                    var e = window.mod_list[d][0], f = window.mod_list[d][1];
                    f && c.publish(e, a)
                }
                window.culture = a;
                var g = new bog.cache;
                g.set_text("current_culture", a)
            }) : console.log("attempting to change culture to the current culture")
        })
    }, d = function (c, d, f, g) {
        if (!c)throw"Invalid markup";
        d ? a(d, f, function (a) {
            a ? e(c, a, function (a) {
                g(a)
            }) : g(c)
        }) : b(function (b) {
            if (!b)throw"invalid culture";
            b = b.replace("-", "_"), a(b, f, function (a) {
                a ? e(c, a, function (a) {
                    g(a)
                }) : g(c)
            })
        })
    }, e = function (a, b, c) {
        var d = $(a);
        $.each(d.find("[data-localize-key]"), function (a, c) {
            var d = c.getAttribute("data-localize-key"), e = c.getAttribute("data-localize-target");
            if (b) {
                var g = f(d, b);
                switch (e) {
                    case"text":
                        c.innerText = g;
                        break;
                    case"html":
                        c.innerHTML = g;
                        break;
                    case"form-group":
                        $(c).children("label").text(g.label), $(c).children("input").attr("placeholder", g.placeholder)
                }
            } else switch (e) {
                case"text":
                    c.innerText = "[][][][][][][][][][][][]";
                    break;
                case"html":
                    c.innerHTML = "[][][][][][][][][][][][]";
                    break;
                case"form-group":
                    $(c).children("label").text("[][][][][][][][][][][][]"), $(c).children("input").attr("placeholder", "[][][][][][][][][][][][]")
            }
        }), c(d)
    }, f = function (a, b) {
        a = a.replace(/\[(\w+)\]/g, ".$1"), a = a.replace(/^\./, "");
        for (var c = a.split("."); c.length;) {
            var d = c.shift();
            if (!(d in b))return;
            b = b[d]
        }
        return b
    };
    return{get_module_markup: d, get_module_text: a, get_culture: b, set_culture: c}
}, !bog)var bog = {};
bog.session = {isAuthenticated: function (a) {
    $.ajax("/api/auth", {type: "GET", dataType: "json", complete: function (b) {
        if (200 == b.status) {
            var c = b.responseJSON;
            c.is_auth ? a(!0, c.user) : a(!1, null)
        } else a(!1, null)
    }})
}, sessionUser: function () {
}};